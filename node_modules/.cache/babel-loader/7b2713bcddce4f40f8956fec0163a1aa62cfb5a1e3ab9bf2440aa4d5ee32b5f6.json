{"ast":null,"code":"// src/services/trackingService.ts\nimport axios from \"axios\";\nexport const trackingGuide = async guia => {\n  try {\n    const response = await axios.post(`https://api.enviosuramerica.com/services-web/tracking-guia`, {\n      guia\n    },\n    // Envía el número de guía en el cuerpo\n    {\n      withCredentials: true,\n      headers: {\n        \"Content-Type\": \"application/json\"\n        // No es necesario agregar Access-Control-Allow-Credentials aquí\n      }\n    });\n    if (response.status === 200) {\n      return response.data; // Devuelve toda la respuesta\n    } else {\n      throw new Error(`HTTP error status ${response.status}`);\n    }\n  } catch (err) {\n    if (axios.isAxiosError(err)) {\n      console.error(\"Error al recibir la solicitud\", err.response);\n    }\n    console.error(\"Error al recibir la solicitud\", err);\n    throw err; // Lanza el error para manejarlo más arriba\n  }\n};","map":{"version":3,"names":["axios","trackingGuide","guia","response","post","withCredentials","headers","status","data","Error","err","isAxiosError","console","error"],"sources":["/Users/gianfranco/Documents/americancargo/americancargo/src/modules/tracking/services/trackGuide.tsx"],"sourcesContent":["// src/services/trackingService.ts\nimport axios from \"axios\";\n\nexport const trackingGuide = async (guia: string): Promise<any> => {\n  try {\n    const response = await axios.post(\n      `https://api.enviosuramerica.com/services-web/tracking-guia`,\n      { guia }, // Envía el número de guía en el cuerpo\n      {\n        withCredentials: true,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          // No es necesario agregar Access-Control-Allow-Credentials aquí\n        },\n      }\n    );\n\n    if (response.status === 200) {\n      return response.data; // Devuelve toda la respuesta\n    } else {\n      throw new Error(`HTTP error status ${response.status}`);\n    }\n  } catch (err) {\n    if (axios.isAxiosError(err)) {\n      console.error(\"Error al recibir la solicitud\", err.response);\n    }\n    console.error(\"Error al recibir la solicitud\", err);\n    throw err; // Lanza el error para manejarlo más arriba\n  }\n};\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,aAAa,GAAG,MAAOC,IAAY,IAAmB;EACjE,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,IAAI,CAC/B,4DAA4D,EAC5D;MAAEF;IAAK,CAAC;IAAE;IACV;MACEG,eAAe,EAAE,IAAI;MACrBC,OAAO,EAAE;QACP,cAAc,EAAE;QAChB;MACF;IACF,CACF,CAAC;IAED,IAAIH,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;MAC3B,OAAOJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IACxB,CAAC,MAAM;MACL,MAAM,IAAIC,KAAK,CAAC,qBAAqBN,QAAQ,CAACI,MAAM,EAAE,CAAC;IACzD;EACF,CAAC,CAAC,OAAOG,GAAG,EAAE;IACZ,IAAIV,KAAK,CAACW,YAAY,CAACD,GAAG,CAAC,EAAE;MAC3BE,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEH,GAAG,CAACP,QAAQ,CAAC;IAC9D;IACAS,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEH,GAAG,CAAC;IACnD,MAAMA,GAAG,CAAC,CAAC;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}