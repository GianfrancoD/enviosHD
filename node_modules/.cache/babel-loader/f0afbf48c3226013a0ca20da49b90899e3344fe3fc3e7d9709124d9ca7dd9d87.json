{"ast":null,"code":"import axios from\"axios\";export const handleServices=async(e,state,setState)=>{e.preventDefault();setState(prev=>({...prev,loading:true,error:null}));try{const response=await axios.post(`https://api.enviosuramerica.com/services-web/tracking-guia`,{guia:state.trackingNumber},{headers:{\"Content-Type\":\"application/json\"}});console.log(\"Response from API:\",response.data);if(response.status===200){const data=response.data;if(data.status===\"ok\"){console.log(data.tracking);setState(prev=>({...prev,trackingResult:data.tracking,loading:false}));}else{setState(prev=>({...prev,trackingResult:null,error:data.mensaje||\"Error desconocido\",loading:false}));}}else{throw new Error(`HTTP error status ${response.status}`);}}catch(error){console.error(\"Error:\",error.response?error.response.data:error.message);setState(prev=>({...prev,error:\"No se pudo obtener información del seguimiento.\",loading:false}));}};","map":{"version":3,"names":["axios","handleServices","e","state","setState","preventDefault","prev","loading","error","response","post","guia","trackingNumber","headers","console","log","data","status","tracking","trackingResult","mensaje","Error","message"],"sources":["/Users/gianfranco/Documents/americancargo/americancargo/src/modules/tracking/services/trackingServices.tsx"],"sourcesContent":["import axios from \"axios\";\nimport { TrackingHelper } from \"../helpers/trackingHelper\";\n\nexport const handleServices = async (\n  e: React.FormEvent,\n  state: any,\n  setState: React.Dispatch<React.SetStateAction<TrackingHelper>>\n) => {\n  e.preventDefault();\n  setState((prev) => ({ ...prev, loading: true, error: null }));\n\n  try {\n    const response = await axios.post(\n      `https://api.enviosuramerica.com/services-web/tracking-guia`,\n      { guia: state.trackingNumber },\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n    console.log(\"Response from API:\", response.data);\n\n    if (response.status === 200) {\n      const data = response.data;\n      if (data.status === \"ok\") {\n        console.log(data.tracking);\n        setState((prev) => ({\n          ...prev,\n          trackingResult: data.tracking,\n          loading: false,\n        }));\n      } else {\n        setState((prev) => ({\n          ...prev,\n          trackingResult: null,\n          error: data.mensaje || \"Error desconocido\",\n          loading: false,\n        }));\n      }\n    } else {\n      throw new Error(`HTTP error status ${response.status}`);\n    }\n  } catch (error: any) {\n    console.error(\n      \"Error:\",\n      error.response ? error.response.data : error.message\n    );\n    setState((prev) => ({\n      ...prev,\n      error: \"No se pudo obtener información del seguimiento.\",\n      loading: false,\n    }));\n  }\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAGzB,MAAO,MAAM,CAAAC,cAAc,CAAG,KAAAA,CAC5BC,CAAkB,CAClBC,KAAU,CACVC,QAA8D,GAC3D,CACHF,CAAC,CAACG,cAAc,CAAC,CAAC,CAClBD,QAAQ,CAAEE,IAAI,GAAM,CAAE,GAAGA,IAAI,CAAEC,OAAO,CAAE,IAAI,CAAEC,KAAK,CAAE,IAAK,CAAC,CAAC,CAAC,CAE7D,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAT,KAAK,CAACU,IAAI,CAC/B,4DAA4D,CAC5D,CAAEC,IAAI,CAAER,KAAK,CAACS,cAAe,CAAC,CAC9B,CACEC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CACF,CAAC,CACDC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAEN,QAAQ,CAACO,IAAI,CAAC,CAEhD,GAAIP,QAAQ,CAACQ,MAAM,GAAK,GAAG,CAAE,CAC3B,KAAM,CAAAD,IAAI,CAAGP,QAAQ,CAACO,IAAI,CAC1B,GAAIA,IAAI,CAACC,MAAM,GAAK,IAAI,CAAE,CACxBH,OAAO,CAACC,GAAG,CAACC,IAAI,CAACE,QAAQ,CAAC,CAC1Bd,QAAQ,CAAEE,IAAI,GAAM,CAClB,GAAGA,IAAI,CACPa,cAAc,CAAEH,IAAI,CAACE,QAAQ,CAC7BX,OAAO,CAAE,KACX,CAAC,CAAC,CAAC,CACL,CAAC,IAAM,CACLH,QAAQ,CAAEE,IAAI,GAAM,CAClB,GAAGA,IAAI,CACPa,cAAc,CAAE,IAAI,CACpBX,KAAK,CAAEQ,IAAI,CAACI,OAAO,EAAI,mBAAmB,CAC1Cb,OAAO,CAAE,KACX,CAAC,CAAC,CAAC,CACL,CACF,CAAC,IAAM,CACL,KAAM,IAAI,CAAAc,KAAK,CAAC,qBAAqBZ,QAAQ,CAACQ,MAAM,EAAE,CAAC,CACzD,CACF,CAAE,MAAOT,KAAU,CAAE,CACnBM,OAAO,CAACN,KAAK,CACX,QAAQ,CACRA,KAAK,CAACC,QAAQ,CAAGD,KAAK,CAACC,QAAQ,CAACO,IAAI,CAAGR,KAAK,CAACc,OAC/C,CAAC,CACDlB,QAAQ,CAAEE,IAAI,GAAM,CAClB,GAAGA,IAAI,CACPE,KAAK,CAAE,iDAAiD,CACxDD,OAAO,CAAE,KACX,CAAC,CAAC,CAAC,CACL,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}